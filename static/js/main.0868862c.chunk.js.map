{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","App","React","useState","setIsReversed","NONE","setSortType","className","onClick","type","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,qFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASF,SAASC,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAazB,OAXAG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKT,EAASY,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,MAINR,EACHC,EAAaQ,UACbR,G,SA1BDN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6BE,IAAMe,EAAgB,WAC3B,MAAoCC,IAAMC,UAAS,GAAnD,mBAAOZ,EAAP,KAAmBa,EAAnB,KACA,EAAgCF,IAAMC,SAASjB,EAASmB,MAAxD,mBAAOf,EAAP,KAAiBgB,EAAjB,KAaA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,wBACEC,QAfW,kBAAMF,EAAYpB,EAASU,WAgBtCa,KAAK,SACLF,UAAWG,IAAW,CACpB,2CACEpB,IAAaJ,EAASU,SACxB,oDACEN,IAAaJ,EAASU,WAP5B,iCAaA,wBACEY,QA1Ba,kBAAMF,EAAYpB,EAASY,SA2BxCW,KAAK,SACLF,UAAWG,IAAW,CACpB,0CACEpB,IAAaJ,EAASY,OACxB,mDACER,IAAaJ,EAASY,SAP5B,4BAaA,wBACEU,QArCQ,kBAAMJ,GAAeb,IAsC7BkB,KAAK,SACLF,UAAWG,IAAW,CACpB,yCAA0CnB,EAC1C,mDAAoDA,IALxD,sBAWED,GAAYC,IAEV,wBACEkB,KAAK,SACLF,UAAU,yCACVC,QAlDE,WACZF,EAAYpB,EAASmB,MACrBD,GAAc,IA6CN,sBASN,qBAAKG,UAAU,oCAAf,SACE,qBAAKA,UAAU,oBAAf,SACInB,EAAkBD,EAAiBG,EAAUC,GAC5CoB,KAAI,SAAAC,GACH,OACE,8BACE,qBACE,UAAQ,OAERL,UAAU,qCAHZ,SAKGK,GAHIA,gBCtHzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0868862c.chunk.js","sourcesContent":["import './App.scss';\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = React.useState(false);\n  const [sortType, setSortType] = React.useState(SortType.NONE);\n\n  const sortByName = () => setSortType(SortType.ALPHABET);\n\n  const sortByLength = () => setSortType(SortType.LENGTH);\n\n  const reverse = () => setIsReversed(!isReversed);\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons is-flex is-centered\">\n        <button\n          onClick={sortByName}\n          type=\"button\"\n          className={classNames({\n            'button is-outlined is-success is-rounded':\n              sortType === SortType.ALPHABET,\n            'button is-outlined is-success is-rounded is-light':\n              sortType !== SortType.ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={sortByLength}\n          type=\"button\"\n          className={classNames({\n            'button is-outlined is-danger is-rounded':\n              sortType === SortType.LENGTH,\n            'button is-outlined is-danger is-rounded is-light':\n              sortType !== SortType.LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={classNames({\n            'button is-outlined is-black is-rounded': isReversed,\n            'button is-outlined is-black is-rounded is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-rounded is-ghost is-outlined\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n      <div className=\"is-flex is-justify-content-center\">\n        <div className=\"has-text-centered\">\n          {(getReorderedGoods(goodsFromServer, sortType, isReversed))\n            .map(good => {\n              return (\n                <div>\n                  <div\n                    data-cy=\"Good\"\n                    key={good}\n                    className=\"box column is-info is-rounded mb-3\"\n                  >\n                    {good}\n                  </div>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}